%imports and pre-processes data

clear;

data = load('data1.txt');

X = data(:, [1, 2]);
Y = data(:, 2);

[m, n] = size(X);

% add intercept terms as the first column
X = [ones(m, 1) X];
theta0 = zeros(n + 1, 1);

% use logistic model to predict 
[C, G] = cost(X, y, theta0, @(X) sigmoid(X));

fprintf('For theta0, Cost: %f \t Gradient: %f\n', [C, G]);

% train the model to find the theta that minimizes cost
% using various methods
[T, C] = gradientDesc(@(t)cost(X, y, t, @(X) sigmoid(X)), theta0, )

% use gradient descent

% use newton

% use conjugate gradient

       

